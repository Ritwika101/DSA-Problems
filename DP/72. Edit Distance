  
int solve(int i,int j, string s1, string s2,vector<vector<int>>&t){
        if(i==s1.length())
            return t[i][j]=s2.length()-j;
        if(j==s2.length())
            return t[i][j]=s1.length()-i;
        if(t[i][j]!=-1)
            return t[i][j];
        if(s1[i]==s2[j])
            return t[i][j] = solve(i+1,j+1,s1,s2,t);
        else{
            int ans=1000;
            int insert = 1+solve(i,j+1,s1,s2,t);
            int del = 1+solve(i+1,j,s1,s2,t);
            int replace = 1+solve(i+1,j+1,s1,s2,t);
            return t[i][j]= min(ans,min(insert,min(del,replace)));
            
        }    
        
    }
    int minDistance(string word1, string word2) {
        vector<vector<int>>t(word1.length()+1,vector<int>(word2.length()+1,-1));
        return solve(0, 0, word1, word2, t);
        
    }
